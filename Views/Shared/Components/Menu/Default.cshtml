@model IEnumerable<QRMenu.Models.Menu>


   
    


@foreach (var item in Model)
{
<div class="item">
    
        <img src="@item.ImageUrl">
    
        <div class="item-info">
            <p class="item-description" style="font-weight:bold ; font-size:14pt ; color : dimgrey">@item.ItemNameAR | @item.ItemNameEN</p>

            <p class="item-description">@item.Details</p>
            <p class="item-price">@item.Price JD</p>
            <div class="quantity" >
                <label for="quantity1" >Quantity:</label>
                <input type="number" id="quantity-@item.MenuId" value="1" min="1" class="quantity-input">
            </div>
            <button  class="add-to-cart" onclick="addToCart(this ,'@item.ItemNameAR', @item.Price, @item.MenuId)">Add to Cart</button>
            <span id="checkmark-@item.MenuId" hidden></span> 
        </div> 
</div>
    }
    <style>
        /* Style for the quantity input and "Add to Cart" button */
        .quantity-control {
            display: flex;
            align-items: center;
        }

        .quantity-input {
            width: 50px; /* Adjust the width as needed */
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin-right: 10px; /* Add spacing between input and button */
        }

        .add-to-cart-button {
            background-color: #007bff; /* Customize the button color */
            color: #fff; /* Text color for the button */
            padding: 5px 10px; /* Adjust padding as needed */
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .add-to-cart-button:hover {
                background-color: #0056b3; /* Change button color on hover */
            }


    </style>

    <script>
        function addToCart(button,name, price, itemId) {
            // Get the quantity input value
            var quantity = parseInt(document.getElementById('quantity-' + itemId).value);

            // Create an object representing the item
            var item = {
                name: name,
                price: price,
                quantity: quantity
            };

            // Get the existing cart items from localStorage or initialize an empty array
            var cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

            // Check if the item already exists in the cart
            var existingItemIndex = cartItems.findIndex(function (cartItem) {
                return cartItem.name === name;
            });

            if (existingItemIndex !== -1) {
                // Update the quantity if the item is already in the cart
                cartItems[existingItemIndex].quantity += quantity;
            } else {
                // Add the item to the cart if it's not already there
                cartItems.push(item);
            }

            // Store the updated cartItems back in localStorage
            localStorage.setItem('cartItems', JSON.stringify(cartItems));
            button.hidden = true;
            var checkmarkSpan = document.getElementById('checkmark-' + itemId);
            checkmarkSpan.hidden = false;
            checkmarkSpan.innerHTML = '&#10004;' + "Added To Cart"; // HTML entity for checkmark (✓)

            
        }
    </script>
